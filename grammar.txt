terminaux: (à ajouter plus tard)

non terminaux: (à ajouter plus tard)

règles de production:

 
PROG ::= [BLOC]*
        | END

BLOC     ::=    OPERATION [eol]*
             |  EXPRESSION [eol]*
             |  LOOP [eol]*
             |  FUNCTION [eol]*
             |  DECISION [eol]*

LOOP::=     for (id in VECTOR) {BLOC} eol
       |    while (EXPRESSION) {BLOC} eol
       |    repeat {BLOC} eol

FUNCTION ::=    function (ARGUMENT){BLOC| Return [id|num] } eol

ARGUMENT ::=    NONE
            |   (id,)* id

DECISION::=     if(OPERATION) (eol)* {BLOC}
            |   if(OPERATION){BLOC} else {BLOC} eol
            |   if(OPERATION){BLOC} else DECISION eol

IDENTIF ::=     num | id |CALLFUNCTION


OPERATION::=    IDENTIF [OPERATOR IDENTIF]* eol
            |   '(' [OPERATION]* ')'


EXPRESSION::=   id<-OPERATION  


OPERATOR ::=    '==' | '<' | '>' | '+' | '-' | '*' | '/' 
                | '<=' | '>=' | '!'| '&' | '|' | '!='| '||'
                | '&&' | '%%' | '%/%' | '^' 

VECTOR ::=      c(id [,id]*)

CALLFUNCTION ::=   id(None | ARGUMENT [,ARGUMENT]*) 



                